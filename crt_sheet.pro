; *******************; *		    *; *  CRT_SHEET.PRO  *; *		    *; *******************pro CRT_SHEET,r1,t1,p1,crt,t,bres; r1,t1,p1 (INPUT)=Coordonnees spheriques geographiques du point dont on desire;			le champ magnetique; crt,t (INPUT)=parametre du courant et matrice de changement de base; bres (OUTPUT)=Valeurs du champ en ce point; Le but de ce programme est de calculer le champ magnetique du au disque de ;courant. Pour cela il faut :;	1-transformer les coordonnees spheriques geographiques en coordonnees ;cylindriques magnetiques;	2-calculer le champ;	3-transformer le champ donnees en coordonnees cylindriques magnetiques ;en champ en coordonnees spheriques geographiques;les etapes 1 et 3 se font en passant par l'intermediaire de coordonnees ;cartesiennestr1=!dtor*t1 & pr1=!dtor*p1tr=[[sin(tr1)*cos(pr1),sin(tr1)*sin(pr1),cos(tr1)],[$	cos(tr1)*cos(pr1),cos(tr1)*sin(pr1),-sin(tr1)],[$	-sin(pr1),cos(pr1),0.]]res=t#tr#[r1,0,0]r2=sqrt(res(0)^2.+res(1)^2.);print,r2,res(2)   f1=sqrt((res(2)-crt(2))^2+crt(1)^2)   f2=sqrt((res(2)+crt(2))^2+crt(1)^2)   brp2=r2/2.*(1./f1-1./f2)   bzp2=2*crt(2)/sqrt(res(2)^2.+crt(1)^2.)- $	r2^2/4.*((res(2)-crt(2))/f1^3.-(res(2)+crt(2))/f2^3.)if r2 lt crt(0) then begin   f1=sqrt((res(2)-crt(2))^2+crt(0)^2)   f2=sqrt((res(2)+crt(2))^2+crt(0)^2)   br2=crt(3)*(r2/2.*(1./f1-1./f2)-brp2)   bz2=crt(3)*(2*crt(2)/sqrt(res(2)^2.+crt(0)^2.)- $	r2^2/4.*((res(2)-crt(2))/f1^3.-(res(2)+crt(2))/f2^3.)-bzp2)endif else if abs(res(2)) gt crt(2) then begin   f1=sqrt((res(2)-crt(2))^2+r2^2)   f2=sqrt((res(2)+crt(2))^2+r2^2)   br2=crt(3)*(((f1-f2+abs(res(2))/res(2)*2*crt(2))/r2-$	crt(0)^2*r2/4.*(1./f1^3-1./f2^3))-brp2)   bz2=crt(3)*(2*crt(2)/sqrt(res(2)^2.+r2^2.)- $	crt(0)^2/4.*((res(2)-crt(2))/f1^3.-(res(2)+crt(2))/f2^3.)-bzp2)endif else begin   f1=sqrt((res(2)-crt(2))^2+r2^2)   f2=sqrt((res(2)+crt(2))^2+r2^2)   br2=crt(3)*(((f1-f2+2.*res(2))/r2-crt(0)^2*r2/4.*(1./f1^3-1./f2^3))-brp2)   bz2=crt(3)*(2*crt(2)/sqrt(res(2)^2.+r2^2.)- $	crt(0)^2/4.*((res(2)-crt(2))/f1^3.-(res(2)+crt(2))/f2^3.)-bzp2)endelsebres=invert(tr)#invert(t)#[br2*res(0)/r2,br2*res(1)/r2,bz2];print,bresreturnend